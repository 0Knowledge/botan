
:Author: Jack Lloyd
:Date: 2010-11-29

Version 1.9.11, 2010-11-29
----------------------------------------

Many SSL/TLS APIs have changed. This API is still unstable. The SSL
interface now requires TR1 (uses std::tr1::function).

Fix a bug that caused SSL handshake failures when using RC4
ciphersuites

Fix a number of CRL encoding and decoding bugs

Counter mode now always encrypts 256 blocks in parallel

Code where u32bit was used to represent a length now uses size_t

Use small tables in the first round of AES to make some timing/cache
attacks harder to perform.

Removed AES class: applications must choose specifically AES-128,
AES-192, or AES-256

Add hex encoding/decoding functions that can be used without a Pipe

Add base64 encoding functions that can be used without a Pipe

Add to_string function to X509_Certificate

Add support for dynamic engine loading on Windows

Replace BlockCipher::BLOCK_SIZE attribute with function block_size()
and HashFunction::HASH_BLOCK_SIZE attribute with hash_block_size()

Changed semantics of MemoryRegion::resize and clear to match STL

Removed MemoryRegion::append, replaced by push_back and operator+=

Move PBKDF lookup to engine system

The IDEA key schedule has been changed to run in constant time

Avoid a possible timing vulnerability in Montgomery reduction

Add Algorithm and Key_Length_Specification classes

Switch default PKCS #8 encryption algorithm from AES-128 to AES-256

Update Skein-512 to match the v1.3 specification

Allow using PBKDF2 with empty passphrases

Add compile-time deprecation warnings for GCC, Clang, and MSVC

Support use of HMAC(SHA-256) and CMAC(Blowfish) in passhash9

Improve support for Intel Atom processors

Fix compilation problems under Sun Studio and Clang

